name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install rust
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}

    - name: Run cargo build common
      run: cargo build -p atuin-common --release

    - name: Run cargo build client
      run: cargo build -p atuin-client --release

    - name: Run cargo build server
      run: cargo build -p atuin-server --release

    - name: Run cargo build main
      run: cargo build --all --release && strip target/release/atuin

  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install rust
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-debug-${{ hashFiles('**/Cargo.lock') }}

    - name: Run cargo test
      run: cargo test --all-features --workspace

    - name: Run cargo check (all features)
      run: cargo check --all-features --workspace

    - name: Run cargo check (no features)
      run: cargo check --no-default-features --workspace

    - name: Run cargo check (sync)
      run: cargo check --no-default-features --features sync --workspace

    - name: Run cargo check (server)
      run: cargo check --no-default-features --features server --workspace

  clippy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install latest rust
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true
          components: clippy

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-debug-${{ hashFiles('**/Cargo.lock') }}

    - name: Run clippy
      run: cargo clippy -- -D warnings
        
  format:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install latest rust
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true
          components: rustfmt

    - name: Format
      run: cargo fmt -- --check
